OBJECT Codeunit 60001 CKL Advanced Line Capture
{
  OBJECT-PROPERTIES
  {
    Date=03/01/18;
    Time=12:00:00 PM;
    Modified=Yes;
    Version List=ALR001;
  }
  PROPERTIES
  {
    TableNo=6085590;
    OnRun=BEGIN
            Document := Rec;
            Code;
          END;

  }
  CODE
  {
    VAR
      Text001@1160040000 : TextConst 'ENU="Please create a %1 with %2 = ''%3''"';
      Document@1210050000 : Record 6085590;
      CaptureMgt@1160040001 : Codeunit 6085576;
      DocumentComment@1000000000 : Record 6085594;
      Text002@1000000001 : TextConst 'DEU=Zeilenidentifikationsfeld %1 - %2 verwendet!';

    PROCEDURE Code@1000000000();
    VAR
      LineIdentDocumentValue@1210050001 : Record 6085593;
      TempDocLine@1000000001 : TEMPORARY Record 6085596;
      LineIdentField@1210050000 : Record 6085580;
      VarLineNoField@1000000000 : Record 6085580;
    BEGIN
      //RUN STANDARD LINE CAPTURING CODEUNIT
      CODEUNIT.RUN(CODEUNIT::"Purch./Sales - Line Capture",Document);

      //BUILD TEMPORARY LINE TABLE AND LOOP LINES
      Document.BuildTempLinesTable(TempDocLine);

      CheckValuesForMinMaxPosition(Document,TempDocLine);

      //Get Line Identification Field Position
      LineIdentField.SETRANGE("Template No.",Document."Template No.");
      LineIdentField.SETRANGE(Type,LineIdentField.Type::Line);
      LineIdentField.SETRANGE("Line Identification Field",TRUE);
      IF LineIdentField.ISEMPTY THEN
        EXIT;

      IF LineIdentField.FINDSET THEN
      REPEAT
        IF TempDocLine.FINDSET THEN
        REPEAT
          //Find Line Identification Field in current temp line
          IF CaptureMgt.GetFieldValue(Document,LineIdentField,TempDocLine."Line No.",LineIdentDocumentValue) THEN BEGIN

            //Processing of CKL advanced line recoginition fields
            WITH VarLineNoField DO BEGIN
              COPYFILTERS(LineIdentField);
              SETRANGE("Line Identification Field", FALSE);
              IF FINDSET THEN
                REPEAT
                  CASE "Field Calculation Type" OF
                    "Field Calculation Type"::LineIdentificationField:
                      CaptureValue(TempDocLine,LineIdentField,LineIdentDocumentValue,VarLineNoField);
                  END;
                UNTIL NEXT = 0;
            END;
          END;
        UNTIL TempDocLine.NEXT = 0;
      UNTIL LineIdentField.NEXT = 0;

      //RENUMBER IF LINES DELETED
      RenumberLines(Document);
    END;

    LOCAL PROCEDURE CheckValuesForMinMaxPosition@1000000004(VAR DCDocument@1000000004 : Record 6085590;VAR TempDocLine@1000000000 : TEMPORARY Record 6085596);
    VAR
      Document@1000000008 : Record 6085590;
      DocumentValue@1000000007 : Record 6085593;
      Field@1000000006 : Record 6085580;
      Template@1000000003 : Record 6085579;
      lFieldCodes@1000000001 : ARRAY [20] OF Code[20];
      i@1000000005 : Integer;
      NoOfLines@1000000002 : Integer;
    BEGIN
      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.",DCDocument."Template No.");
      Field.SETRANGE(Type,Field.Type::Line);
      IF Field.FINDSET THEN
        REPEAT
          IF (Field."Field valid at min Top" > 0)  OR (Field."Field valid at min Left" > 0) THEN BEGIN
            DocumentValue.SETCURRENTKEY("Document No.","Is Value",Type,"Line No.");
            DocumentValue.SETRANGE("Document No.",DCDocument."No.");
            DocumentValue.SETRANGE("Is Value",TRUE);
            DocumentValue.SETRANGE(Type,DocumentValue.Type::Line);
            DocumentValue.SETRANGE(Code,Field.Code);
            IF DocumentValue.FINDSET THEN
              REPEAT
                IF ((Field."Field valid at min Top" > 0) AND (DocumentValue.Top < Field."Field valid at min Top")) OR
                   ((Field."Field valid at min Left" > 0) AND (DocumentValue.Left < Field."Field valid at min Left"))
                THEN
                  DocumentValue.DELETE(TRUE);
              UNTIL DocumentValue.NEXT = 0;
          END;

        UNTIL (Field.NEXT = 0);
    END;

    PROCEDURE CaptureValue@1210050000(TempDocLine@1210050009 : TEMPORARY Record 6085596;LineIdentField@1000000006 : Record 6085580;VAR LineIdentDocumentValue@1000000000 : Record 6085593;VAR VarLineNoField@1000000001 : Record 6085580);
    VAR
      OffsetField@1210050004 : Record 6085580;
      Value@1160040007 : Record 6085593;
      Page@1210050003 : Record 6085591;
      CurrTop@1000000002 : Integer;
      CurrLeft@1000000003 : Integer;
      CurrBottom@1000000004 : Integer;
      CurrRight@1000000005 : Integer;
    BEGIN
      Page.GET(Document."No.",TempDocLine."Page No.");

      OffsetField.GET(Document."Template No.",OffsetField.Type::Line,VarLineNoField.Code);

      WITH LineIdentDocumentValue DO BEGIN
        // Create offset area for value capturing
        CurrTop := Top + VarLineNoField."Offset Top";
        CurrLeft := Left + VarLineNoField."Offset Left";
        CurrBottom := CurrTop + VarLineNoField."Offset Height";
        CurrRight := CurrLeft + VarLineNoField."Offset Width";
        CaptureMgt.CaptureFromPos(Page,VarLineNoField,TempDocLine."Line No.",TRUE,CurrTop,CurrLeft,CurrBottom,CurrRight,Value);
      END;
    END;

    LOCAL PROCEDURE RenumberLines@1000000003(Document@1000000002 : Record 6085590);
    VAR
      Value@1000000000 : Record 6085593;
      Value2@1000000004 : Record 6085593;
      PrevValue@1000000003 : Record 6085593;
      i2@1000000001 : Integer;
    BEGIN
      Value.RESET;
      Value.SETCURRENTKEY("Document No.","Is Value",Type,"Page No.","Line No.");
      Value.SETRANGE("Document No.",Document."No.");
      Value.SETRANGE("Is Value",TRUE);
      Value.SETRANGE(Type,Value.Type::Line);
      IF Value.FINDSET(FALSE,FALSE) THEN BEGIN
        REPEAT
          IF Value."Line No." <> PrevValue."Line No." THEN
            i2 := i2 + 1;

          IF (Value."Line No." <> i2) THEN BEGIN
            Value2 := Value;
            Value2."Line No." := i2;
            Value2.INSERT;
            Value.DELETE;
          END;
          PrevValue := Value;
        UNTIL Value.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

